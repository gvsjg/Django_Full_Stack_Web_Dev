services:
  web:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - postgresdb
    environment:
      - DJANGO_DB_HOST=postgresdb
      - DJANGO_DB_NAME=mydb
      - DJANGO_DB_USER=myuser
      - DJANGO_DB_PASSWORD=mypassword

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build:
      context: .
    command: conda run -n PY_Web_Dev celery -A api worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - postgresdb
    environment:
      - DJANGO_DB_HOST=postgresdb
      - DJANGO_DB_NAME=mydb
      - DJANGO_DB_USER=myuser
      - DJANGO_DB_PASSWORD=mypassword

  postgresdb:
    image: postgres:17
    container_name: django-docker-postgresdb
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  #jenkins:
  #  image: jenkins/jenkins:lts
  #  user: root
  #  ports:
  #    - "8080:8080"
  #    - "50000:50000"
  #  volumes:
  #    - ./jenkins_home:/var/jenkins_home
  #    - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres_data: